# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = healvis
description = A healpix-based radio interferometric visibility simulator
author = Radio Astronomy Software Group
license = BSD
long_description = file: README.md
long_description_content_type = text/x-rst; charset=UTF-8
url = https://github.com/rasg-affiliates/healvis
project_urls =
    Documentation = https://healvis.readthedocs.org
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Intended Audience :: Science/Research
    License :: OSI Approved
    Natural Language :: English
    Topic :: Scientific/Engineering :: Physics
    Topic :: Scientific/Engineering :: Astronomy

[options]
zip_safe = False
packages = find:
include_package_data = True
scripts =
    scripts/make_gsm_shell.py
    scripts/make_imaging_layout.py
    scripts/make_point_sphere.py
    scripts/multibaseline_beamvary_jobs.py
    scripts/skymodel_vis_sim.py
    scripts/view_obs_coverage.py
    scripts/vis_calc.py
    scripts/vis_param_sim.py
    scripts/vis_shell_calc.py

# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    numpy>=1.14
    scipy
    astropy>=2.0
    numba
    h5py
    pyyaml
    pyuvdata
    astropy-healpix

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install cal_coefficients[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
gsm =
    pygsm @ git+git://github.com/telegraphic/PyGSM.git
all =
    pygsm @ git+git://github.com/telegraphic/PyGSM.git
    scikit-learn
dev =
    Sphinx>=1.8
    numpydoc>=0.8.0
    nbsphinx
    coverage>=4.5.1
    pytest>=3.5.1
    pytest-cov>=2.5.1
    pre-commit

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
addopts =
    --cov healvis --cov-report term-missing
    --cov-config=.coveragerc
    --cov-report xml:./coverage.xml
    --junitxml=test-reports/xunit.xml
    --verbose
norecursedirs =
    dist
    build
    .tox
testpaths = healvis/tests

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[build_sphinx]
source_dir = docs
build_dir = build/sphinx
